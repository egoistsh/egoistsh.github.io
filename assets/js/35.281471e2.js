(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{358:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"reentrantlock-是什么-提供什么功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock-是什么-提供什么功能"}},[t._v("#")]),t._v(" ReentrantLock 是什么？提供什么功能？")]),t._v(" "),a("p",[t._v("ReentrantLock 为可重入锁，指一个线程可以对临界资源重复加锁。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("支持公平锁和非公平锁。")])]),t._v(" "),a("li",[a("p",[t._v("支持设置多个条件。")])]),t._v(" "),a("li",[a("p",[t._v("支持响应中断。")])])]),t._v(" "),a("p",[a("strong",[t._v("公平锁和非公平锁：")])]),t._v(" "),a("p",[t._v("公平锁是指多个线程"),a("strong",[t._v("按照申请锁的顺序")]),t._v("来获取锁，线程直接进入队列中排队，队列中的第一个线程才能获得锁。公平锁的优点是等待锁的线程不会饿死。缺点是整体吞吐效率相对非公平锁要低，等待队列中除第一个线程以外的所有线程都会阻塞，CPU唤醒阻塞线程的开销比非公平锁大。")]),t._v(" "),a("p",[t._v("非公平锁是多个线程加锁时"),a("strong",[t._v("直接尝试获取锁")]),t._v("，获取不到才会到等待队列的队尾等待。但如果此时锁刚好可用，那么这个线程可以无需阻塞直接获取到锁。非公平锁的优点是可以减少唤起线程的开销，整体的吞吐效率高，因为线程有几率不阻塞直接获得锁，CPU不必唤醒所有线程。缺点是处于等待队列中的线程可能会饿死，或者等很久才会获得锁。")]),t._v(" "),a("h2",{attrs:{id:"reentrantlock-跟-synchronized-的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock-跟-synchronized-的对比"}},[t._v("#")]),t._v(" ReentrantLock 跟 Synchronized 的对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("ReentrantLock")]),t._v(" "),a("th",[t._v("Synchronized")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("锁实现机制")]),t._v(" "),a("td",[t._v("依赖 AQS")]),t._v(" "),a("td",[t._v("依赖 JDK")])]),t._v(" "),a("tr",[a("td",[t._v("灵活性")]),t._v(" "),a("td",[t._v("支持响应中断、超时、尝试获取锁")]),t._v(" "),a("td",[t._v("不灵活")])]),t._v(" "),a("tr",[a("td",[t._v("锁释放形式")]),t._v(" "),a("td",[t._v("必须显示调用 unlock()")]),t._v(" "),a("td",[t._v("自动释放监视器")])]),t._v(" "),a("tr",[a("td",[t._v("锁类型")]),t._v(" "),a("td",[t._v("公平锁 & 非公平锁")]),t._v(" "),a("td",[t._v("非公平锁")])]),t._v(" "),a("tr",[a("td",[t._v("条件队列")]),t._v(" "),a("td",[t._v("可关联多个条件")]),t._v(" "),a("td",[t._v("只能关联一个条件")])]),t._v(" "),a("tr",[a("td",[t._v("可重入性")]),t._v(" "),a("td",[t._v("可重入")]),t._v(" "),a("td",[t._v("可重入")])])])]),t._v(" "),a("p",[t._v("都是可重入锁。可重入的意思是同一个线程在外层方法获取锁的时候，该线程的内层方法会自动获取该锁（前提是锁的对象是同一个对象或class），不会因为之前获取过还没释放而阻塞。在一定程度上可以避免死锁。")]),t._v(" "),a("h2",{attrs:{id:"reentrantlock-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock-的使用"}},[t._v("#")]),t._v(" ReentrantLock 的使用")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MILLISECONDS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"reentrantlock-是如何实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock-是如何实现的"}},[t._v("#")]),t._v(" ReentrantLock 是如何实现的？")]),t._v(" "),a("h3",{attrs:{id:"整体实现流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体实现流程"}},[t._v("#")]),t._v(" 整体实现流程")]),t._v(" "),a("p",[t._v("继承 AQS，具体获取锁的方法由内部类公平锁（FairSync）和非公平锁（NonfairSync）重写 tryAcquire() 方法实现，该方法通过 CAS 去设置 state，如果该方法返回了 true，表示当前线程获取锁成功，执行结束；如果该方法返回 false，表示获取失败，则需要加入等待队列中，通过执行 addWaiter(Node.EXCLUSIVE)。")]),t._v(" "),a("p",[t._v("在 ReentrantLock 里面的公平锁和非公平锁的父类 Sync 定义了可重入锁的释放锁机制，重写了 tryRelease() 方法。")]),t._v(" "),a("h3",{attrs:{id:"重入锁和其他非重入锁的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重入锁和其他非重入锁的实现"}},[t._v("#")]),t._v(" 重入锁和其他非重入锁的实现")]),t._v(" "),a("p",[t._v("通过父类 AQS 中维护的同步状态 state 来计算重入次数，state 初始化为0。")]),t._v(" "),a("p",[t._v("当线程尝试获取锁时，可重入锁先尝试获取并更新 state 值，如果 state == 0 表示没有其他线程占用，将 state 置位1，当前线程开始执行；如果 state != 0，则判断当前线程是否是获取到这个锁的线程，如果是的话，state + 1，且当前线程可以再次获取锁。")]),t._v(" "),a("p",[t._v("非重入锁则是直接去获取并尝试更新当前 state 的值，如果 state != 0，则获取锁失败，当前线程阻塞。")]),t._v(" "),a("h3",{attrs:{id:"公平锁和非公平锁的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公平锁和非公平锁的实现"}},[t._v("#")]),t._v(" 公平锁和非公平锁的实现")]),t._v(" "),a("p",[t._v("ReentrantLock 的公平锁和非公平锁都是独享锁。当一个线程调用 lock 方法获取锁时，如果同步资源没有被其他线程锁住，那么当前线程使用 CAS 更新 state 值成功后会抢占该资源。如果同步资源被占用且不是当前线程占用时，则加锁失败。")]),t._v(" "),a("p",[t._v("ReentrantLock 中有一个内部类 Sync，Sync 继承了 AQS（AbstractQueuedSynchronizer），公平锁（FairSync）和非公平锁（NonfairSync）继承了Sync。ReentrantLock默认使用非公平锁，可通过构造器指定使用公平锁。")]),t._v(" "),a("p",[t._v("公平锁与非公平锁的 lock() 方法唯一的区别就在于公平锁在获取同步状态时多了一个限制条件：hasQueuedPredecessors()。主要是用于判断当前线程是否位于同步队列中的第一个。如果是则返回true，否则返回false。")]),t._v(" "),a("p",[t._v("公平锁就是通过同步队列来实现多个线程按照申请锁的顺序来获取锁，从而实现公平的特性。非公平锁加锁时不考虑排队等待问题，直接尝试获取锁，所以存在后申请却先获得锁的情况。")]),t._v(" "),a("h2",{attrs:{id:"reentranlock-与-aqs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentranlock-与-aqs"}},[t._v("#")]),t._v(" ReentranLock 与 AQS")]),t._v(" "),a("p",[t._v("加锁逻辑：通过 CAS 设置 state，设置成功表示获取锁成功。获取锁失败则进入等待队列处理。")]),t._v(" "),a("p",[t._v("ReentrantLock 加锁解锁时 API 层核心方法的映射关系：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p.ipic.vip/abns6g.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"aqs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aqs"}},[t._v("#")]),t._v(" AQS")]),t._v(" "),a("p",[t._v("AQS 的核心思想是，如果共享资源空闲，将当前请求资源的线程设置为有效的工作线程，同时通过 CAS 将共享资源的状态（state）设置为锁定状态。如果共享资源被占用，则通过阻塞等待唤醒机制来保证锁的分配，这里通过 CLH 队列的变体实现，将暂时没获取到锁的线程加入队列。")]),t._v(" "),a("h3",{attrs:{id:"底层数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底层数据结构"}},[t._v("#")]),t._v(" 底层数据结构")]),t._v(" "),a("ul",[a("li",[t._v("Node节点的 CLH队列。原始的 CLH 是单向链表，AQS 的队列是 CLH 的变体，是虚拟双向队列，AQS 通过将每条请求共享资源的线程封装成一个节点（Node）来实现锁的分配。")]),t._v(" "),a("li",[t._v("state。用 volatile int state 表示同步状态，通过 CAS 完成对 state 值的修改，通过队列完成资源获取的排队。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p.ipic.vip/d2i3b6.png",alt:"img"}}),a("img",{attrs:{src:"https://p.ipic.vip/oezavy.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"通过修改-state-同步状态实现多线程的独占模式和共享模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过修改-state-同步状态实现多线程的独占模式和共享模式"}},[t._v("#")]),t._v(" 通过修改 state 同步状态实现多线程的独占模式和共享模式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p.ipic.vip/9xfjul.png",alt:"img"}}),a("img",{attrs:{src:"https://p.ipic.vip/ktbsmf.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"自定义同步器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义同步器"}},[t._v("#")]),t._v(" 自定义同步器")]),t._v(" "),a("ul",[a("li",[t._v("独占模式，实现 tryAcquire-tryRelease。如 ReentrantLock")]),t._v(" "),a("li",[t._v("共享模式，实现 ryAcquireShared-tryReleaseShared")]),t._v(" "),a("li",[t._v("同时实现独占和共享两种模式。如 ReentrantReadWriteLock")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LeeLock")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractQueuedSynchronizer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" tryAcquire "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" tryRelease "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isHeldExclusively "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),t._v(" sync "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" unlock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("release")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LeeMain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LeeLock")]),t._v(" leeLock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LeeLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" runnable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    leeLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    leeLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runnable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runnable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述代码每次运行结果都会是 20000。通过简单的几行代码实现同步功能。")]),t._v(" "),a("h3",{attrs:{id:"aqs-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aqs-应用"}},[t._v("#")]),t._v(" AQS 应用")]),t._v(" "),a("p",[a("strong",[t._v("实现 ReentrantLock 可重入性")])]),t._v(" "),a("ol",[a("li",[t._v("State 初始化的时候为 0，表示没有任何线程持有锁。")]),t._v(" "),a("li",[t._v("当有线程持有该锁时，值就会在原来的基础上+1，同一个线程多次获得锁是，就会多次+1，这里就是可重入的概念。")]),t._v(" "),a("li",[t._v("解锁也是对这个字段-1，一直到 0，此线程对锁释放。")])]),t._v(" "),a("p",[a("strong",[t._v("同步工具")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("同步工具")]),t._v(" "),a("th",[t._v("同步工具与 AQS 的关联")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ReentrantLock")]),t._v(" "),a("td",[t._v("使用 AQS 保存锁重复持有的次数。当一个线程获取锁时，ReentrantLock 记录当前获得锁的线程标识，用于检测是否重复获取，以及错误线程试图解锁操作时异常情况的处理。")])]),t._v(" "),a("tr",[a("td",[t._v("Semaphore")]),t._v(" "),a("td",[t._v("使用 AQS 同步状态来保存信号量的当前计数。tryRelease 会增加计数，acquireShared 会减少计数。")])]),t._v(" "),a("tr",[a("td",[t._v("CountDownLatch")]),t._v(" "),a("td",[t._v("使用 AQS 同步状态来表示计数。计数为 0 时，所有的 Acquire 操作（CountDownLatch 的 await 方法）才可以通过。")])]),t._v(" "),a("tr",[a("td",[t._v("ReentrantReadWriteLock")]),t._v(" "),a("td",[t._v("使用 AQS 同步状态中的 16 位保存写锁持有的次数，剩下的 16 位用于保存读锁的持有次数。")])]),t._v(" "),a("tr",[a("td",[t._v("ThreadPoolExecutor")]),t._v(" "),a("td",[t._v("Worker 利用 AQS 同步状态实现对独占线程变量的设置（tryAcquire 和 tryRelease）。")])])])]),t._v(" "),a("h2",{attrs:{id:"q-a-reentrantlock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a-reentrantlock"}},[t._v("#")]),t._v(" Q & A（ReentrantLock）")]),t._v(" "),a("p",[t._v("Q：某个线程获取锁失败的后续流程是什么呢？")]),t._v(" "),a("p",[t._v("A：存在某种排队等候机制，线程继续等待，仍然保留获取锁的可能，获取锁流程仍在继续。")]),t._v(" "),a("p",[t._v("Q：既然说到了排队等候机制，那么就一定会有某种队列形成，这样的队列是什么数据结构呢？")]),t._v(" "),a("p",[t._v("A：是 CLH 变体的 FIFO 双端队列。")]),t._v(" "),a("p",[t._v("Q：处于排队等候机制中的线程，什么时候可以有机会获取锁呢？")]),t._v(" "),a("p",[t._v("A：前置节点是头结点，且当前线程获取锁成功")]),t._v(" "),a("p",[t._v("Q：如果处于排队等候机制中的线程一直无法获取锁，需要一直等待么？还是有别的策略来解决这一问题？")]),t._v(" "),a("p",[t._v("A：线程所在节点的状态会变成取消状态，取消状态的节点会从队列中释放。")]),t._v(" "),a("p",[t._v("Q：Lock 函数通过 Acquire 方法进行加锁，但是具体是如何加锁的呢？")]),t._v(" "),a("p",[t._v("A：AQS 的 Acquire 会调用 tryAcquire 方法，tryAcquire 由各个自定义同步器实现，通过 tryAcquire 完成加锁过程。")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&mid=2651749434&idx=3&sn=5ffa63ad47fe166f2f1a9f604ed10091&chksm=bd12a5778a652c61509d9e718ab086ff27ad8768586ea9b38c3dcf9e017a8e49bcae3df9bcc8&scene=38#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("【基本功】不可不说的Java“锁”事"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://javaguide.cn/java/concurrent/reentrantlock.html#%E5%89%8D%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("从ReentrantLock的实现看AQS的原理及应用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://xiaomi-info.github.io/2020/03/24/synchronized/",target:"_blank",rel:"noopener noreferrer"}},[t._v("synchronized 实现原理 | 小米信息部技术团队"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://javaguide.cn/java/concurrent/aqs.html#aqs-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("AQS 详解"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);