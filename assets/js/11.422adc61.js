(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{335:function(e,t,v){"use strict";v.r(t);var a=v(7),_=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("三组功能类似的方法：")]),e._v(" "),t("ul",[t("li",[e._v("抛出异常：add、remove、element")]),e._v(" "),t("li",[e._v("返回结果但不抛出异常：offer、poll、peek")]),e._v(" "),t("li",[e._v("阻塞：put、take")])]),e._v(" "),t("p",[e._v("add、offer都是返回 boolean。")]),e._v(" "),t("p",[e._v("remove、element、poll、peek都是返回element，poll、peek没有时返回null。")]),e._v(" "),t("p",[e._v("区别仅在于：当队列满时无法添加元素，或队列空了无法移除元素时的不同处理方式。")]),e._v(" "),t("p",[e._v("第一组的特点是在无法正常执行的情况下抛出异常；")]),e._v(" "),t("p",[e._v("第二组的特点是在无法正常执行的情况下不抛出异常，但会用返回值提示运行失败；")]),e._v(" "),t("p",[e._v("第三组的特点是在遇到特殊情况时让线程陷入阻塞状态，等到可以运行再继续执行。")]),e._v(" "),t("h2",{attrs:{id:"put"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[e._v("#")]),e._v(" put")]),e._v(" "),t("p",[e._v("put 方法的作用是插入元素。通常在队列没满的时候是正常的插入，但是如果队列已满就无法继续插入，这时它既不会立刻返回 false 也不会抛出异常，而是让插入的线程陷入阻塞状态，直到队列里有了空闲空间，此时队列就会让之前的线程解除阻塞状态，并把刚才那个元素添加进去。")]),e._v(" "),t("h2",{attrs:{id:"take"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#take"}},[e._v("#")]),e._v(" take")]),e._v(" "),t("p",[e._v("take 方法的作用是获取并移除队列的头结点。通常在队列里有数据的时候会正常取出数据并删除；但是如果执行 take 的时候队列里无数据，则阻塞，直到队列里有数据；一旦队列里有数据了，就会立刻解除阻塞状态，并且取到数据。")])])}),[],!1,null,null,null);t.default=_.exports}}]);