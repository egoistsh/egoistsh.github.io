(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{352:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"future"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#future"}},[t._v("#")]),t._v(" Future")]),t._v(" "),s("p",[s("strong",[t._v("Future 模式")]),t._v("是多线程开发中非常常见的一种设计模式，它的核心思想是"),s("strong",[t._v("异步调用")]),t._v("。")]),t._v(" "),s("p",[t._v("当我们需要调用一个函数方法时，如果这个函数执行的很慢，那么我们就要进行等待。但有时候，我们可能并不急于获取结果。因此，我们可以让被调用者立即返回，让它在后台慢慢处理这个请求。对于调用者来说，则可以先处理一些其他任务，在真正需要数据的场合再去尝试获取需要的数据。")]),t._v(" "),s("p",[t._v("对 Future 模式来说，虽然它无法立即给你需要的数据，但它会给你一个契约，将来你可以凭借这个契约去重新获取你需要的信息。")]),t._v(" "),s("p",[t._v("这里我们主要谈论 JDK 中的 Future 模式，即 java.util.concurrent  包下的 "),s("code",[t._v("Future")]),t._v(" 接口。")]),t._v(" "),s("p",[s("code",[t._v("RunnableFutre")]),t._v(" 接口：继承了 "),s("code",[t._v("Future")]),t._v(" 和 "),s("code",[t._v("Runnable")]),t._v(" 两个接口。其中run() 方法用于构造真实的数据。")]),t._v(" "),s("p",[s("code",[t._v("FutureTask")]),t._v(" 类：一个具体的实现类。"),s("code",[t._v("WaitNode")]),t._v(" 是其内部类。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNly1gxfsgo80tpj30u010swhq.jpg",alt:""}})]),t._v(" "),s("center",[t._v("图：Diagram for FutureTask")]),t._v(" "),s("h2",{attrs:{id:"future-常见操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#future-常见操作"}},[t._v("#")]),t._v(" Future 常见操作")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义任务:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交任务并获得Future:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" future "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从Future获取异步执行返回的结果:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" future"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可能阻塞")]),t._v("\n")])])]),s("p",[t._v("流程：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("当我们提交一个"),s("code",[t._v("Callable")]),t._v("任务后（"),s("code",[t._v("Runnable")]),t._v(" 任务没有返回值），我们会同时获得一个"),s("code",[t._v("Future")]),t._v("对象。")])]),t._v(" "),s("li",[s("p",[t._v("然后，我们在主线程某个时刻调用"),s("code",[t._v("Future")]),t._v("对象的"),s("code",[t._v("get()")]),t._v("方法，就可以获得异步执行的结果。")])]),t._v(" "),s("li",[s("p",[t._v("在调用"),s("code",[t._v("get()")]),t._v("时，如果异步任务已经完成，我们就直接获得结果。")])]),t._v(" "),s("li",[s("p",[t._v("如果异步任务还没有完成，那么"),s("code",[t._v("get()")]),t._v("会阻塞，直到任务完成后才返回结果。")])])]),t._v(" "),s("h2",{attrs:{id:"future-接口方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#future-接口方法"}},[t._v("#")]),t._v(" Future 接口方法")]),t._v(" "),s("p",[t._v("一个"),s("code",[t._v("Future<V>")]),t._v("接口表示一个未来可能会返回的结果，它定义的方法有：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("get()")]),t._v("：获取结果（可能会等待）")]),t._v(" "),s("li",[s("code",[t._v("get(long timeout, TimeUnit unit)")]),t._v("：获取结果，但只等待指定的时间；")]),t._v(" "),s("li",[s("code",[t._v("cancel(boolean mayInterruptIfRunning)")]),t._v("：取消当前任务；")]),t._v(" "),s("li",[s("code",[t._v("isDone()")]),t._v("：判断任务是否已完成。")])]),t._v(" "),s("h2",{attrs:{id:"completablefuture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#completablefuture"}},[t._v("#")]),t._v(" CompletableFuture")]),t._v(" "),s("p",[s("code",[t._v("CompletableFuture")]),t._v(" 是 Java8 新增的工具类，是增强的 Future。")]),t._v(" "),s("p",[t._v("CompletableFuture 它实现了 "),s("code",[t._v("Future")]),t._v(" 接口，还实现了 "),s("code",[t._v("CompletionStage")]),t._v(" 接口。")]),t._v(" "),s("p",[s("code",[t._v("CompletableFuture")]),t._v(" 除了提供了更为好用和强大的 Future 特性之外，还提供了函数式编程的能力。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletionStage")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("CompletionStage")]),t._v(" 接口也是 Java8 新增的。而这个接口里有多达40种方法，是为了函数式编程中的流式调用准备的。")]),t._v(" "),s("p",[t._v("通过这个接口，我们可以在一个执行结果上进行多次流式调用。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("stage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenApply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("square")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenAccept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenRun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其功能：")]),t._v(" "),s("ul",[s("li",[t._v("完成了就通知")]),t._v(" "),s("li",[t._v("异步执行任务")]),t._v(" "),s("li",[t._v("流式调用")]),t._v(" "),s("li",[t._v("异常处理")]),t._v(" "),s("li",[t._v("组合多个CompletableFuture")])]),t._v(" "),s("h2",{attrs:{id:"completablefuture-常见操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#completablefuture-常见操作"}},[t._v("#")]),t._v(" CompletableFuture 常见操作")]),t._v(" "),s("h3",{attrs:{id:"创建completablefuture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建completablefuture"}},[t._v("#")]),t._v(" 创建CompletableFuture")]),t._v(" "),s("p",[t._v("常见的创建 "),s("code",[t._v("CompletableFuture")]),t._v(" 对象的方法如下：")]),t._v(" "),s("ol",[s("li",[t._v("通过 new 关键字。")]),t._v(" "),s("li",[t._v("基于 "),s("code",[t._v("CompletableFuture")]),t._v(" 自带的静态工厂方法："),s("code",[t._v("runAsync()")]),t._v(" 、"),s("code",[t._v("supplyAsync()")]),t._v(" 。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RpcResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" resultFuture "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("supplyAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Supplier")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" supplier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用自定义线程池(推荐)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("supplyAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Supplier")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" supplier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executor")]),t._v(" executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" runnable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用自定义线程池(推荐)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" runnable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executor")]),t._v(" executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"处理异步结算的结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理异步结算的结果"}},[t._v("#")]),t._v(" 处理异步结算的结果")]),t._v(" "),s("p",[t._v("当我们获取到异步计算的结果之后，还可以对其进行进一步的处理，比较常用的方法有下面几个：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("thenApply()")])]),t._v(" "),s("li",[s("code",[t._v("thenAccept()")])]),t._v(" "),s("li",[s("code",[t._v("thenRun()")])]),t._v(" "),s("li",[s("code",[t._v("whenComplete()")])])]),t._v(" "),s("h3",{attrs:{id:"异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("handle()")])]),t._v(" "),s("li",[s("code",[t._v("exceptionally()")])]),t._v(" "),s("li",[s("code",[t._v("completeExceptionally()")])])]),t._v(" "),s("h3",{attrs:{id:"组合completablefuture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合completablefuture"}},[t._v("#")]),t._v(" 组合CompletableFuture")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("thenCompose()")])]),t._v(" "),s("li",[s("code",[t._v("thenCombine()")])])]),t._v(" "),s("p",[s("code",[t._v("thenCompose()")]),t._v(" 和 "),s("code",[t._v("thenCombine()")]),t._v(" 有什么区别呢？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("thenCompose()")]),t._v(" 可以两个 "),s("code",[t._v("CompletableFuture")]),t._v(" 对象，并将前一个任务的返回结果作为下一个任务的参数，它们之间存在着先后顺序。")]),t._v(" "),s("li",[s("code",[t._v("thenCombine()")]),t._v(" 会在两个任务都执行完成后，把两个任务的结果合并。两个任务是并行执行的，它们之间并没有先后依赖顺序。")])]),t._v(" "),s("h3",{attrs:{id:"并行运行多个completablefuture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并行运行多个completablefuture"}},[t._v("#")]),t._v(" 并行运行多个CompletableFuture")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("allOf()")])]),t._v(" "),s("li",[s("code",[t._v("anyOf()")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("allOf()")]),t._v(" 方法会等到所有的 "),s("code",[t._v("CompletableFuture")]),t._v(" 都运行完成之后再返回")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("anyOf()")]),t._v(" 方法不会等待所有的 "),s("code",[t._v("CompletableFuture")]),t._v(" 都运行完成之后再返回，只要有一个执行完成即可！")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("[1] 《实战Java高并发程序设计》")]),t._v(" "),s("p",[t._v("[2] "),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1252599548343744/1306581155184674",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰-使用Future"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[3] "),s("a",{attrs:{href:"https://javaguide.cn/java/concurrent/completablefuture-intro/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaGuide-CompletableFuture入门"),s("OutboundLink")],1)])],1)}),[],!1,null,null,null);s.default=n.exports}}]);