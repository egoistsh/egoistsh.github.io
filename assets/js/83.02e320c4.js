(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{407:function(v,_,i){"use strict";i.r(_);var l=i(7),a=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"监控系统的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#监控系统的作用"}},[v._v("#")]),v._v(" 监控系统的作用")]),v._v(" "),_("ul",[_("li",[v._v("实时采集监控数据")]),v._v(" "),_("li",[v._v("实时反馈监控状态")]),v._v(" "),_("li",[v._v("预知故障和告警")]),v._v(" "),_("li",[v._v("辅助定位故障")]),v._v(" "),_("li",[v._v("辅助性能调优")]),v._v(" "),_("li",[v._v("辅助容量规划")]),v._v(" "),_("li",[v._v("辅助自动化运维")])]),v._v(" "),_("h2",{attrs:{id:"如何使用监控系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何使用监控系统"}},[v._v("#")]),v._v(" 如何使用监控系统")]),v._v(" "),_("ul",[_("li",[v._v("了解监控对象的工作原理\n"),_("ul",[_("li",[v._v("比如想对JVM进行监控，就必须清楚JVM的堆内存结构和垃圾回收机制。")])])]),v._v(" "),_("li",[v._v("确定监控对象的指标\n"),_("ul",[_("li",[v._v("比如想对某个接口进行监控，可以采用请求量、耗时、超时量、异常量等指标来衡量。")])])]),v._v(" "),_("li",[v._v("定义合理的报警阈值和等级")]),v._v(" "),_("li",[v._v("建立完善的故障处理流程")])]),v._v(" "),_("h2",{attrs:{id:"监控对象和指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#监控对象和指标"}},[v._v("#")]),v._v(" 监控对象和指标")]),v._v(" "),_("ul",[_("li",[v._v("硬件监控\n"),_("ul",[_("li",[v._v("电源、CPU、机器温度、风扇、物理磁盘、raid、内存、网卡")])])]),v._v(" "),_("li",[v._v("服务器基础监控\n"),_("ul",[_("li",[v._v("CPU：单个CPU以及整体的使用情况")]),v._v(" "),_("li",[v._v("内存：已用内存、可用内存")]),v._v(" "),_("li",[v._v("磁盘：磁盘使用率、磁盘读写的吞吐量")]),v._v(" "),_("li",[v._v("网络：出口流量、入口流量、TCP连接状态")])])]),v._v(" "),_("li",[v._v("数据库监控\n"),_("ul",[_("li",[v._v("数据库连接数")]),v._v(" "),_("li",[v._v("QPS、TPS")]),v._v(" "),_("li",[v._v("并行处理的会话数")]),v._v(" "),_("li",[v._v("缓存命中率")]),v._v(" "),_("li",[v._v("主从时延")]),v._v(" "),_("li",[v._v("锁状态")]),v._v(" "),_("li",[v._v("慢查询")])])]),v._v(" "),_("li",[v._v("中间件监控\n"),_("ul",[_("li",[v._v("Nginx：活跃连接数、等待、连接数、丢弃连接数、请求量、耗时、5XX错误率")]),v._v(" "),_("li",[v._v("Tomcat：最大线程数、当前线程数、请求量、耗时、错误量、堆内存使用情况、GC次数和耗时")]),v._v(" "),_("li",[v._v("缓存：成功连接数、阻塞连接数、已使用内存、内存碎片率、请求量、耗时、缓存命中率")]),v._v(" "),_("li",[v._v("消息队列：连接数、队列数、生成速率、消费速率、消息堆积量")])])]),v._v(" "),_("li",[v._v("应用监控\n"),_("ul",[_("li",[v._v("HTTP接口：URL存活、请求量、耗时、异常量")]),v._v(" "),_("li",[v._v("RPC接口：请求量、耗时、超时量、拒绝量")]),v._v(" "),_("li",[v._v("JVM：GC次数、GC耗时、各个内存区域的大小、当前线程数、死锁线程数")]),v._v(" "),_("li",[v._v("线程池：活跃线程数、任务队列大小、任务执行耗时、拒绝任务数")]),v._v(" "),_("li",[v._v("连接池：总连接数、活跃连接数")]),v._v(" "),_("li",[v._v("日志监控：访问日志、错误日志")]),v._v(" "),_("li",[v._v("业务指标：如PV、订单量")])])])]),v._v(" "),_("h2",{attrs:{id:"主流监控系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主流监控系统"}},[v._v("#")]),v._v(" 主流监控系统")]),v._v(" "),_("p",[v._v("老牌监控系统：")]),v._v(" "),_("ul",[_("li",[v._v("Zabbix")]),v._v(" "),_("li",[v._v("Nagios")]),v._v(" "),_("li",[v._v("Cacti")]),v._v(" "),_("li",[v._v("Ganglia")]),v._v(" "),_("li",[v._v("Garafana")])]),v._v(" "),_("p",[v._v("新一代监控系统：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Open-Falcon（自动采集，只要安装了falcon-agent的机器，就会自动开始采集各项指标，主动上报，不需要用户在server做任何配置）")])]),v._v(" "),_("li",[_("strong",[v._v("Prometheus（采用pull模式）")])])]),v._v(" "),_("h2",{attrs:{id:"spring-boot-admin"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-admin"}},[v._v("#")]),v._v(" Spring Boot Admin")]),v._v(" "),_("p",[v._v("可以监控spring-boot项目的基本信息比如：Spring容器管理的所有的bean、详细的Health信息、内存信息、JVM信息、垃圾回收信息、各种配置信息（比如数据源、缓存列表和命中率）等，Threads 线程管理，Environment 管理等。")]),v._v(" "),_("p",[v._v("支持多种告警方式接入，如企业微信、钉钉、邮件、短信。")]),v._v(" "),_("p",[v._v("可满足spring boot项目轻量级的使用。")]),v._v(" "),_("p",[v._v("在SBA中，Server作为注册中心，监控所有客户端当前的状态，服务端和客户端之间通过/health接口进行通信，依次来对客户端进行监听。服务端通过定时轮询客户端的/health接口来对客户端进行心态检测。")]),v._v(" "),_("p",[v._v("客户端通过 Actuator 获取信息。")]),v._v(" "),_("h2",{attrs:{id:"选型建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#选型建议"}},[v._v("#")]),v._v(" 选型建议")]),v._v(" "),_("ul",[_("li",[v._v("首先要明确需求：要监控的对象有哪些，机器数量和监控指标有多少，需要具备什么样的功能。")]),v._v(" "),_("li",[v._v("不要想一开始就all in one，从成本考虑，初期直接使用开源的方案即可，解决从无到有。")]),v._v(" "),_("li",[v._v("Zabbix在服务器监控方面占绝对优势，但对应用层监控并不擅长。这点Open-Falcon和Prometheus做的比较好。")]),v._v(" "),_("li",[v._v("新一代监控系统的明显优势：灵活的数据模型，更成熟的时序数据库，强大的告警功能。如果没有对老牌监控系统的技术积累的话，建议直接使用Open-Falcon或Prometheus。")]),v._v(" "),_("li",[v._v("Open-Falcon的核心优势在于数据分片功能，能支撑更多的机器和监控项；Prometheus则是容器监控方面的标配，有Google和k8s加持。")]),v._v(" "),_("li",[v._v("Zabbix、Open-Falcon和Prometheus都支持和Grafana做快速集成，想要美观且强大的可视化体验，可以和Grafana进行组合。")]),v._v(" "),_("li",[v._v("轻量级使用，可使用SBA，并可对其扩展。")]),v._v(" "),_("li",[v._v("Prometheus 也可以选择买阿里云的产品。")])]),v._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),_("ol",[_("li",[v._v("https://www.daimajiaoliu.com/daima/7b7376aeb0be805")]),v._v(" "),_("li",[v._v("https://cloud.tencent.com/developer/article/1704555")]),v._v(" "),_("li",[v._v("https://xie.infoq.cn/article/e1d2ad0d57d9fc6b2bb8fd6a5")]),v._v(" "),_("li",[v._v("https://github.com/codecentric/spring-boot-admin")])])])}),[],!1,null,null,null);_.default=a.exports}}]);