(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{389:function(t,v,_){"use strict";_.r(v);var a=_(7),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"什么是-http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-http"}},[t._v("#")]),t._v(" 什么是 HTTP")]),t._v(" "),v("p",[t._v("超文本传输协议是一种用于分布式、协作式和超媒体信息系统的应用层协议，是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准。")]),t._v(" "),v("p",[t._v("HTTP 是为 Web 浏览器与 Web 服务器之间的通信而设计的，但也可以用于其他目的。")]),t._v(" "),v("p",[t._v("HTTP 是一个基于 TCP/IP 通信协议来传递数据的（HTML 文件、图片文件、查询结果等）。")]),t._v(" "),v("h2",{attrs:{id:"http-状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码"}},[t._v("#")]),t._v(" HTTP 状态码")]),t._v(" "),v("ul",[v("li",[t._v("1xx：信息性状态码")]),t._v(" "),v("li",[t._v("2xx：成功")]),t._v(" "),v("li",[t._v("3xx：重定向")]),t._v(" "),v("li",[t._v("4xx：客户端错误")]),t._v(" "),v("li",[t._v("5xx：服务端错误")])]),t._v(" "),v("br"),t._v(" "),v("p",[t._v("常见状态码：")]),t._v(" "),v("ul",[v("li",[t._v("101：切换请求协议。比如切换到 http2 或 websocket 协议。")]),t._v(" "),v("li",[t._v("200：请求成功")]),t._v(" "),v("li",[t._v("301：永久重定向，会缓存")]),t._v(" "),v("li",[t._v("302：临时重定向，不会缓存。请求者之后应继续使用原地址请求。")]),t._v(" "),v("li",[t._v("304  命中缓存，不具有跳转意义，重定向已存在的缓存文件。")]),t._v(" "),v("li",[t._v("400：客户端请求的语法错误")]),t._v(" "),v("li",[t._v("403：服务端禁止访问，跟权限有关")]),t._v(" "),v("li",[t._v("404：服务端无法根据客户端请求找到资源")]),t._v(" "),v("li",[t._v("500：服务端错误")]),t._v(" "),v("li",[t._v("503：服务器当前很忙，暂时无法响应")])]),t._v(" "),v("h2",{attrs:{id:"http-请求方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-请求方式"}},[t._v("#")]),t._v(" HTTP 请求方式")]),t._v(" "),v("ul",[v("li",[t._v("GET：对服务器资源获取的请求，是安全幂等的。")]),t._v(" "),v("li",[t._v("POST：发送包含用户提交数据的请求")]),t._v(" "),v("li",[t._v("PUT：向服务端提交数据，以修改数据。和POST一样，但是PUT是幂等的（相同的多个PUT请求，等同于只发送了一个PUT请求，因为PUT是直接指向修改资源的，而POST是指向修改资源的父级资源）")]),t._v(" "),v("li",[t._v("DELETE：删除服务端某些资源")]),t._v(" "),v("li",[t._v("HEAD：请求页面的首部，获取资源的元信息")]),t._v(" "),v("li",[t._v("CONNECT：用于ssl隧道的基于代理的请求")]),t._v(" "),v("li",[t._v("OPTIONS：返回所有可用的方法，常用于跨域")]),t._v(" "),v("li",[t._v("TRACE：追踪请求-响应的传输路径")])]),t._v(" "),v("h2",{attrs:{id:"content-type"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#content-type"}},[t._v("#")]),t._v(" content-type")]),t._v(" "),v("p",[t._v("即Internet Media Type（互联网媒体类型）。通过告知类型让接收方得以进行相应的处理。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("content-type")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("application/xml")]),t._v(" "),v("td",[t._v("xml数据格式")])]),t._v(" "),v("tr",[v("td",[t._v("application/json")]),t._v(" "),v("td",[t._v("json数据格式")])]),t._v(" "),v("tr",[v("td",[t._v("application/pdf")]),t._v(" "),v("td",[t._v("pdf格式")])]),t._v(" "),v("tr",[v("td",[t._v("text/html")]),t._v(" "),v("td",[t._v("HTML格式")])]),t._v(" "),v("tr",[v("td",[t._v("application/x-www-form-urlencoded")]),t._v(" "),v("td",[t._v("表单提交数据默认格式")])])])]),t._v(" "),v("h2",{attrs:{id:"常见端口对应的服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见端口对应的服务"}},[t._v("#")]),t._v(" 常见端口对应的服务")]),t._v(" "),v("ul",[v("li",[t._v("21：FTP 文件传输协议")]),t._v(" "),v("li",[t._v("22：SSH")]),t._v(" "),v("li",[t._v("23：telnet 远程登录服务")]),t._v(" "),v("li",[t._v("25：SMTP 简单邮件传输协议")]),t._v(" "),v("li",[t._v("53：DSN 域名服务器")]),t._v(" "),v("li",[t._v("80：HTTP")]),t._v(" "),v("li",[t._v("110：POP3 邮件协议")]),t._v(" "),v("li",[t._v("443：HTTPS")]),t._v(" "),v("li",[t._v("1080：SOCKETS")]),t._v(" "),v("li",[t._v("1521：Oracle")]),t._v(" "),v("li",[t._v("3306：MySQL")])]),t._v(" "),v("h2",{attrs:{id:"get和post的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[t._v("#")]),t._v(" GET和POST的区别")]),t._v(" "),v("ul",[v("li",[t._v("请求参数：GET 的请求参数在 URL 中，用 & 连接。POST 的通过 request body 传参。")]),t._v(" "),v("li",[t._v("参数数据类型：GET 只能是 ASCII 的字符。POST 没有限制。")]),t._v(" "),v("li",[t._v("请求缓存：GET 会被主动 cache。POST 不会被缓存，除非手动设置。")]),t._v(" "),v("li",[t._v("数据包：GET 产生一个 TCP 数据包。POST 产生两个。（这好像跟浏览器的实现有关）")]),t._v(" "),v("li",[t._v("历史记录：GET 参数会被保留。POST 不会保留。")])]),t._v(" "),v("p",[t._v("continue...")]),t._v(" "),v("h2",{attrs:{id:"如何理解-http-是无状态的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-http-是无状态的"}},[t._v("#")]),t._v(" 如何理解 HTTP 是无状态的")]),t._v(" "),v("p",[t._v("无状态意味着同个浏览器发起多次请求，虽然服务器会响应，但不会知道你是同一个浏览器。")]),t._v(" "),v("p",[t._v("http + cookie/session 可以实现有状态。")]),t._v(" "),v("h2",{attrs:{id:"在交互过程中如果数据传送完了-还不想断开连接怎么办-怎么维持"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在交互过程中如果数据传送完了-还不想断开连接怎么办-怎么维持"}},[t._v("#")]),t._v(" 在交互过程中如果数据传送完了，还不想断开连接怎么办，怎么维持？")]),t._v(" "),v("p",[t._v("设置 connection: keep-alive，使用长连接。")]),t._v(" "),v("h2",{attrs:{id:"http缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),v("p",[v("strong",[t._v("强缓存：")])]),t._v(" "),v("p",[t._v("会有请求，但是不会向服务器发送请求，直接从缓存中读取资源，会有一个响应为200（from disk cache)的。")]),t._v(" "),v("p",[t._v("响应头：")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("Expires")]),t._v("（http1.0）：response header里的过期时间，浏览器再次加载资源时，如果在这个过期时间内，则命中强缓存。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Cache-Control")]),t._v("（http1.1，优先级更高）：当值设为max-age=300时，表示五分钟内再次加载资源，就会命中缓存")])])]),t._v(" "),v("p",[v("strong",[t._v("协商缓存（对比缓存）：")])]),t._v(" "),v("p",[t._v("需要向服务器发送header请求，服务器根据请求的request header的一些参数来判断是否命中协商缓存，如果命中，则返回304状态码并带上新的response header通知浏览器从缓存中读取资源。")]),t._v(" "),v("p",[t._v("请求头：")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("If-None-Match")]),t._v("（可靠性优先）：存放ETag的值。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("If-Modified-Since")]),t._v("（性能优先）：存放Last-Modified的值。")])])]),t._v(" "),v("p",[t._v("响应头：")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("ETag")]),t._v("（可靠性优先）：是对资源的一种唯一标识，只要资源内容有变化，ETag就会重新生成。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Last-Modified")]),t._v("（性能优先）：是资源文件最后一次更改时间（时间单位是秒，如果1秒内修改N次，则Last-Modified不会做出变化）。")])])]),t._v(" "),v("p",[v("strong",[t._v("浏览器缓存过程：")])]),t._v(" "),v("p",[t._v("1.浏览器第一次发送请求加载数据，服务器返回200，将资源文件从服务器下载下来，并保存响应头中的Cache-Control和Expires")]),t._v(" "),v("p",[t._v("2.下一次需要加载资源时，先比较当前时间与上一次返回200时的时间差，如果没有超过Cache-Control设置的max-age，则没有过期，命中强缓存，不发送请求直接从本地缓存中读取文件（如果不支持HTTP1.1，则用Expires判断是否过期）")]),t._v(" "),v("p",[t._v("3.如果时间过期，服务器则查看header里的If-None-Match和If-Modified-Since")]),t._v(" "),v("p",[t._v("4.服务器优先根据ETag的值判断被请求的文件有没有做修改，Etag值一致则没有修改，命中协商缓存，返回304；如果不一致则有改动，直接返回新的资源文件带上新的Etag值并返回 200。（如果没有ETag则对比last-modified）")]),t._v(" "),v("p",[v("strong",[t._v("用户行为对浏览器缓存的控制：")])]),t._v(" "),v("p",[t._v("1.地址栏访问：正常缓存流程。")]),t._v(" "),v("p",[t._v("2.F5刷新：跳过强制缓存，但是会进行协商缓存。")]),t._v(" "),v("p",[t._v("3.ctrl+F5强制刷新：跳过强缓存，跳过协商缓存，如同第一次一样向服务器拉取资源。")]),t._v(" "),v("p",[v("strong",[t._v("如何不缓存：")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("Cache-Control: no-cache（对资源会使用缓存，但每次使用缓存前需要向服务器对缓存资源进行验证）, no-store（不使用任何缓存）, must-revalidate\n")])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("Expires：（设置当前时间之前）\n")])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("//在引用js、css文件的url后边加上 ?+Math.random()\n<script type=“text/javascript” src=“/js/test.js?+Math.random()”><\/script> \n")])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('//设置html页面不让浏览器缓存的方法\n<meta http-equiv="pragma" content="no-cache"> \n<meta http-equiv="Cache-Control" content="no-cache, must-revalidate"> \n<meta http-equiv="expires" content="Wed, 26 Feb 1997 00:00:00 GMT">\n')])])])])}),[],!1,null,null,null);v.default=e.exports}}]);